C51 COMPILER V9.05   UART                                                                  10/20/2016 17:30:25 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE uart.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg51.h"
   2          #include "uart.h"
   3          
   4          
   5          typedef unsigned char BYTE;
   6          typedef unsigned int WORD;
   7          
   8          #define FOSC 11059200L          //系统频率
   9          #define BAUD 115200             //串口波特率
  10          
  11          #define NONE_PARITY     0       //无校验
  12          #define ODD_PARITY      1       //奇校验
  13          #define EVEN_PARITY     2       //偶校验
  14          #define MARK_PARITY     3       //标记校验
  15          #define SPACE_PARITY    4       //空白校验
  16          
  17          #define PARITYBIT NONE_PARITY   //定义校验位
  18          
  19          sfr AUXR  = 0x8e;               //辅助寄存器
  20          
  21          sfr P_SW1   = 0xA2;             //外设功能切换寄存器1
  22          
  23          #define S1_S0 0x40              //P_SW1.6
  24          #define S1_S1 0x80              //P_SW1.7
  25          
  26          bit busy;
  27          
  28          void UartInit()
  29          {
  30   1          ACC = P_SW1;
  31   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  32   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  33   1          
  34   1      //  ACC = P_SW1;
  35   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=1 S1_S1=0
  36   1      //  ACC |= S1_S0;               //(P3.6/RxD_2, P3.7/TxD_2)
  37   1      //  P_SW1 = ACC;  
  38   1      //  
  39   1      //  ACC = P_SW1;
  40   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
  41   1      //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
  42   1      //  P_SW1 = ACC;  
  43   1      
  44   1      #if (PARITYBIT == NONE_PARITY)
  45   1          SCON = 0x50;                //8位可变波特率
  46   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;                //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;                //9位可变波特率,校验位初始为0
              #endif
  51   1      
  52   1          AUXR = 0x40;                //定时器1为1T模式
  53   1          TMOD = 0x00;                //定时器1为模式0(16位自动重载)
  54   1          TL1 = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
  55   1          TH1 = (65536 - (FOSC/4/BAUD))>>8;
C51 COMPILER V9.05   UART                                                                  10/20/2016 17:30:25 PAGE 2   

  56   1          TR1 = 1;                    //定时器1开始启动
  57   1          ES = 1;                     //使能串口中断
  58   1          EA = 1;
  59   1      
  60   1        //  SendString("STC15F2K60S2\r\nUart Test !\r\n");
  61   1      }
  62          
  63          /*----------------------------
  64          发送串口数据
  65          ----------------------------*/
  66          void SendData(BYTE dat)
  67          {
  68   1          while (busy);               //等待前面的数据发送完成
  69   1          ACC = dat;                  //获取校验位P (PSW.0)
  70   1          if (P)                      //根据P来设置校验位
  71   1          {
  72   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;                //设置校验位为1
              #endif
  77   2          }
  78   1          else
  79   1          {
  80   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;                //设置校验位为0
              #endif
  85   2          }
  86   1          busy = 1;
  87   1          SBUF = ACC;                 //写数据到UART数据寄存器
  88   1      }
  89          
  90          /*----------------------------
  91          发送字符串
  92          ----------------------------*/
  93          void SendString(char *s)
  94          {
  95   1          while (*s)                  //检测字符串结束标志
  96   1          {
  97   2              SendData(*s++);         //发送当前字符
  98   2          }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     74    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
